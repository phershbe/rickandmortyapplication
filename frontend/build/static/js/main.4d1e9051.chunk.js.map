{"version":3,"sources":["rickandmortylogo.png","components/body.js","components/favorites.js","components/registerloginlinks.js","components/usernameandlogout.js","components/header.js","components/register.js","components/login.js","App.js","index.js"],"names":["Body","useState","characters","setCharacters","nameInput","setNameInput","locationInput","setLocationInput","loading","setLoading","favorites","useSelector","state","favoritesList","userNow","currentUser","loggedIn","dispatch","useDispatch","useEffect","isMounted","url","array","a","i","fetch","response","json","data","j","push","results","info","next","getData","className","src","logo","onChange","e","target","value","filter","item","name","toLowerCase","includes","location","map","id","onClick","b","c","d","favoritesCopy","addFavorite","method","headers","body","JSON","stringify","username","addData","image","status","Favorites","theFavorites","length","theItemAndIndex","deleteFavorite","theData","deleteData","RegisterLoginLinks","href","login","register","UsernameAndLogout","theUser","currentMessage","logInOut","setUserMessage","setUser","favoritesFromDatabase","Header","userLoggedIn","class","homepage","Register","setUsername","password","setPassword","placeholder","type","preventDefault","Login","errorMessage","setErrorMessage","sendData","fetchData","jsonData","setMessage","message","payload","user","App","currentPage","initialState","character","myStore","createStore","action","console","log","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.4d1e9051.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/rickandmortylogo.42c8df0b.png\";","import React, { useState, useEffect } from 'react';\nimport logo from '../rickandmortylogo.png';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addFavorite } from '../index.js';\n\nconst Body = () => {\n  const [characters, setCharacters] = useState([]);\n  const [currentName, setCurrentName] = useState('Placeholder');\n  const [nameInput, setNameInput] = useState('');\n  const [locationInput, setLocationInput] = useState('');\n  const [loading, setLoading] = useState(true);\n\n  const favorites = useSelector(state => state.favoritesList);\n  const userNow = useSelector(state => state.currentUser);\n  const loggedIn = useSelector(state => state.loggedIn);\n  const dispatch = useDispatch();\n  \n  useEffect(() => {\n      let isMounted = true;\n      let url = 'https://rickandmortyapi.com/api/character/';\n      let array = [];\n      const getData = async () => {\n        for (let i = 1; i < 4; i++) {\n          let response = await fetch(url);\n          let data = await response.json();\n          for (let j = 0; j < 20; j++) {\n          array.push(data.results[j]);\n          }\n          url = data.info.next;\n        }\n        if (isMounted) {\n          setCharacters(array);\n          setLoading(false);\n        }}\n      getData();\n      return () => {\n        isMounted = false;\n      }\n  }, []);\n\n  const readInput = (e) => {\n      setNameInput(e.target.value);\n  }\n\n  const readLocationInput = (e) => {\n      setLocationInput(e.target.value);\n  }\n\n  const addData = (a, b, c, d) => {\n    const array = [a, b, c, d];\n    const favoritesCopy = [...favorites];\n    favoritesCopy.push(array);\n    dispatch(addFavorite(array));\n    if (loggedIn === true) {\n      fetch('/addFavorite', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          favoritesCopy,\n          username: userNow,\n        }),\n      });\n    }\n  };\n\n  return (\n    <div className=\"pt-5\">\n    <div className=\"text-center mt-5\">\n      <img src={logo} className=\"img-fluid\" />\n    </div>\n    <h2>Click on a character here to add them to your favorites. Choose \"Check Favorites\" in the menu bar to see your favorites and \"Search Characters\" to come back.</h2>\n      <div className=\"all\">\n        <h4>Search by name:</h4>\n        <input onChange={readInput} />\n        <h4>Search by location:</h4>\n        <input onChange={readLocationInput} />\n        <br />\n        <div className=\"row m-1\">\n        \n        {loading ? 'Loading can take a few seconds. Your Rick and Morty experience will be ready soon!' : characters.filter((item) => {\n          if (nameInput == \"\") {\n            return item;\n          } else {\n            if (item.name.toLowerCase().includes(nameInput.toLowerCase())) {\n              return item;\n            }\n          }\n        }).filter((item) => {\n          if (locationInput == \"\") {\n            return item;\n          } else {\n            if (item.location.name.toLowerCase().includes(locationInput.toLowerCase())) {\n              return item;\n            }\n          }\n        }).map((item, id) => {\n          return (\n          <>\n              <div className=\"col-md-4 border border-dark rounded\" id=\"square\" onClick={() => addData(item.name, item.image, item.location.name, item.status)}>\n              <h2>{item.name}</h2>\n              <img src={item.image} className=\"border rounded\" />\n              <h4>Location: {item.location.name}</h4>\n              <h4>Status: {item.status}</h4>\n              </div>\n          </>\n          )\n        })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Body;\n","import React from 'react';\nimport logo from '../rickandmortylogo.png';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteFavorite } from '../index.js';\n\nconst Favorites = () => {\n    const theFavorites = useSelector(state => state.favoritesList);\n    const userNow = useSelector(state => state.currentUser);\n    const loggedIn = useSelector(state => state.loggedIn);\n    const dispatch = useDispatch();\n\n    const deleteData = (theItemAndIndex) => {\n        dispatch(deleteFavorite(theItemAndIndex));\n        const favoritesCopy = [...theFavorites];\n        let theData = [];\n        for (let i = 0; i < favoritesCopy.length; i++) {\n            if (favoritesCopy[i][0] !== theItemAndIndex) {\n                theData.push(favoritesCopy[i]);\n            }\n        }\n        if (loggedIn === true) {\n            fetch('/deleteFavorite', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    theData,\n                    username: userNow,\n                }),\n            });\n        }\n    };\n\n    return (\n        <div className=\"pt-5\">\n            <div className=\"text-center mt-5\">\n            <img src={logo} className=\"img-fluid\" />\n            </div>\n            <h2>Here are your favorites!</h2>\n            <h2>Click on the character to remove her or him from your favorites!</h2>\n            <div className=\"row m-1\">\n            {theFavorites.length === 0 ?\n            <>\n            <div className=\"col\"></div>\n            <div className=\"col\"><h2>Choose some favorites!</h2></div>\n            <div className=\"col\"></div>\n            </>\n            :\n            theFavorites.map((item, id) => {\n                return (\n                    <div className=\"col-md-4 border border-dark rounded\" id=\"square\" onClick={() => deleteData(item[0])}>\n                    <h2>{item[0]}</h2>\n                    <img src={item[1]} className=\"border rounded\" />\n                    <h4>Location: {item[2]}</h4>\n                    <h4>Status: {item[3]}</h4>\n                    </div>\n                );\n            })}\n            </div>\n        </div>\n    );\n};\n\nexport default Favorites;\n","import React from 'react';\nimport { register } from '../index.js';\nimport { login } from '../index.js';\nimport { useDispatch } from 'react-redux';\n\nconst RegisterLoginLinks = () => {\n    const dispatch = useDispatch();\n    return (\n        <>\n        <li className=\"float-right mr-3\"><a href=\"#\" className=\"text-white h3\" onClick={() => dispatch(login())}>Login</a></li>\n        <li className=\"float-right mr-3\"><a href=\"#\" className=\"text-white h3\" onClick={() => dispatch(register())}>Register</a></li>\n        </>\n    );\n};\n\nexport default RegisterLoginLinks;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { logInOut } from '../index.js';\nimport { setUserMessage } from '../index.js';\nimport { setUser } from '../index.js';\nimport { favoritesFromDatabase } from '../index.js';\n\nconst UsernameAndLogout = () => {\n    const theUser = useSelector(state => state.currentMessage);\n    const dispatch = useDispatch();\n\n    const logout = () => {\n        dispatch(logInOut());\n        dispatch(setUserMessage(''));\n        dispatch(setUser(''));\n        dispatch(favoritesFromDatabase(''));\n    };\n\n    return (\n        <>\n            <li className=\"float-right mr-3\"><a href=\"#\" className=\"text-white h3\" onClick={logout}>Logout</a></li>\n            <li className=\"float-right mr-3 text-white h3\">{theUser}</li>\n        </>\n    );\n};\n\nexport default UsernameAndLogout;\n","import react from 'react';\nimport './header.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { homepage } from '../index.js';\nimport { favorites } from '../index.js';\nimport RegisterLoginLinks from './registerloginlinks.js';\nimport UsernameAndLogout from './usernameandlogout.js';\n\nconst Header = () => {\n    const userLoggedIn = useSelector(state => state.loggedIn);\n    const dispatch = useDispatch();\n    return (\n        <nav class=\"navbar navbar-dark py-2 fixed-top justify-content-around bg-primary mr-2 ml-2\">\n            <a className=\"text-white h3 ml-3\" href=\"#\" onClick={() => dispatch(homepage())}>Home</a>\n            <a className=\"text-white h3 ml-3\" href=\"#\" onClick={() => dispatch(favorites())}>Check Favorites</a>\n            <ul className=\"ml-auto mt-2\">\n                {userLoggedIn ? <UsernameAndLogout /> : <RegisterLoginLinks />}\n            </ul>\n        </nav>\n    );\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../index.js';\n\n\nconst Register = () => {\n    const dispatch = useDispatch();\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const readUsername = (e) => {\n        setUsername(e.target.value);\n    };\n\n    const readPassword = (e) => {\n        setPassword(e.target.value);\n    };\n\n    const sendData = (e) => {\n        e.preventDefault();\n        fetch('/register', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                username,\n                password,\n            }),\n        });\n        dispatch(login());\n    }\n\n    return (\n        <>\n        <h1 className=\"text-center mt-5 pt-4\">Register</h1>\n        <form className=\"text-center\">\n            <input placeholder=\"username\" type=\"text\" className=\"h4\" onChange={readUsername} />\n            <input placeholder=\"password\" type=\"password\" className=\"h4\" onChange={readPassword} />\n            <button onClick={sendData}>Submit</button>\n        </form>\n        </>\n    )\n}\n\nexport default Register;","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setUserMessage } from '../index.js';\nimport { logInOut } from '../index.js';\nimport { homepage } from '../index.js';\nimport { setUser } from '../index.js';\nimport { favoritesFromDatabase } from '../index.js';\nimport { loggedIn } from '../index.js';\nimport { updateUser } from '../index.js';\n\nconst Login = () => {\n    const user = useSelector(state => state.currentUser);\n    const userLoggedIn = useSelector(state => state.loggedIn);\n    const dispatch = useDispatch();\n    \n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const readUsername = (e) => {\n        setUsername(e.target.value);\n    };\n\n    const readPassword = (e) => {\n        setPassword(e.target.value);\n    }\n\n    const sendData = async (e) => {\n        e.preventDefault();\n        const fetchData = await fetch('/login', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    username,\n                    password,\n                }),\n        });\n        const jsonData = await fetchData.json();\n        const setMessage = dispatch(setUserMessage(jsonData.message));\n        if (setMessage.payload === 'Username not found') {\n            setErrorMessage('Username not found');\n        } else if (setMessage.payload === 'Login unsuccessful') {\n            setErrorMessage('Login unsuccessful');\n        } else {\n            dispatch(setUser(jsonData.user));\n            dispatch(logInOut());\n            dispatch(favoritesFromDatabase(jsonData.favorites));\n            dispatch(homepage());\n            setErrorMessage('');\n        }\n        setUsername('');\n        setPassword('');\n    };\n\n    return (\n        <>\n        <h1 className=\"text-center mt-5 pt-4\">Login</h1>\n        <form className=\"text-center\">\n            <input placeholder=\"username\" type=\"text\" className=\"h4\" onChange={readUsername} value={username} />\n            <input placeholder=\"password\" type=\"password\" className=\"h4\" onChange={readPassword} value={password} />\n            <button onClick={sendData}>Submit</button>\n        </form>\n        <h3 className=\"text-center\">{errorMessage}</h3>\n        \n        </>\n    );\n}\n\nexport default Login;\n","import React from 'react';\nimport './App.css';\nimport Body from './components/body.js';\nimport Favorites from './components/favorites.js';\nimport Header from './components/header.js';\nimport Register from './components/register.js';\nimport Login from './components/login.js';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst App = () => {\n  const currentPage = useSelector(state => state.currentPage);\n  \n  return (\n      <>\n        <Header />\n        {currentPage === 'homepage' ? <Body /> :\n         currentPage === 'favorites' ? <Favorites /> :\n         currentPage === 'register' ? <Register /> :\n         currentPage === 'login' ? <Login /> :\n        <Body />}\n      </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nlet initialState = {\n  currentPage: 'homepage',\n  currentMessage: '',\n  currentUser: '',\n  favoritesList: [],\n  loggedIn: false,\n};\n\n// reducer\nconst reducer = (state = initialState, action) => {\n  switch(action.type) {\n    case 'HOMEPAGE':\n      return {\n        ...state,\n        currentPage: 'homepage',\n      };\n    case 'FAVORITES':\n      return {\n        ...state,\n        currentPage: 'favorites',\n      };\n    case 'REGISTER':\n      return {\n        ...state,\n        currentPage: 'register',\n      };\n    case 'LOGIN':\n      return {\n        ...state,\n        currentPage: 'login',\n      };\n    case 'USERMESSAGE':\n      return {\n        ...state,\n        currentMessage: action.payload,\n      };\n    case 'USERNOW':\n      return {\n        ...state,\n        currentUser: action.payload,\n      };\n    case 'ADDFAVORITE':\n      return {\n        ...state,\n        favoritesList: [...state.favoritesList, action.payload]\n      };\n    case 'DELETEFAVORITE':\n      return {\n        ...state,\n        favoritesList: state.favoritesList.filter(item => action.payload !== item[0]),\n      };\n    case 'LOGINOUT':\n      console.log(state.loggedIn);\n      return {\n        ...state,\n        loggedIn: !state.loggedIn,\n      };\n    case 'FAVORITESFROMDATABASE':\n      return {\n        ...state,\n        favoritesList: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n\n// actions\nexport const homepage = () => {\n  return {\n    type: 'HOMEPAGE'\n  };\n}\n\nexport const favorites = () => {\n  return {\n    type: 'FAVORITES'\n  };\n}\n\nexport const register = () => {\n  return {\n    type: 'REGISTER'\n  };\n}\n\nexport const login = () => {\n  return {\n    type: 'LOGIN'\n  };\n}\n\nexport const setUserMessage = (username) => {\n  return {\n    type: 'USERMESSAGE',\n    payload: username,\n  };\n}\n\nexport const setUser = (username) => {\n  return {\n    type: 'USERNOW',\n    payload: username,\n  };\n}\n\nexport const addFavorite = (character) => {\n  return {\n    type: 'ADDFAVORITE',\n    payload: character,\n  };\n}\n\nexport const deleteFavorite = (character) => {\n  return {\n    type: 'DELETEFAVORITE',\n    payload: character,\n  };\n}\n\nexport const logInOut = () => {\n  return {\n    type: 'LOGINOUT',\n  };\n}\n\nexport const favoritesFromDatabase = (array) => {\n  return {\n    type: 'FAVORITESFROMDATABASE',\n    payload: array,\n  };\n}\n\n// store\nlet myStore = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={myStore}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}